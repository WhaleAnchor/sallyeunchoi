{"ast":null,"code":"var _jsxFileName = \"/Users/andrewchoi/Documents/src/sally-site/saldog/client/src/App.js\";\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nimport Landing from \"./pages/Landing\";\n// import Shop from \"./pages/Shop\";\n// import About from \"./pages/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Landing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","BrowserRouter","Router","Routes","Route","httpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","Landing","App"],"sources":["/Users/andrewchoi/Documents/src/sally-site/saldog/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nimport Landing from \"./pages/Landing\";\n// import Shop from \"./pages/Shop\";\n// import About from \"./pages/About\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" component={Landing} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,cAAc,QACT,gBAAgB;AACvB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAElB,MAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,GAAG,EAAE;AACP,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGC,UAAU,CAAC,CAACC,CAAC,WAAkB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIlB,YAAY,CAAC;EAC9BmB,IAAI,EAAET,QAAQ,CAACU,MAAM,CAACZ,QAAQ,CAAC;EAC/Ba,KAAK,EAAE,IAAIpB,aAAa;AAC1B,CAAC,CAAC;AAEF,OAAOqB,OAAO,MAAM,iBAAiB;AACrC;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EACb,oBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,MAAM;MAAA,uBACL,QAAC,KAAK;QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,SAAS,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACrC;IAAA;IAAA;IAAA;EAAA,QACK;AAEpB;AAAC,KARQC,GAAG;AAUZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}